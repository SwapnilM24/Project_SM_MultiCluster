name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          distribution: 'zulu' # Optional: specify distribution of JDK (e.g., zulu, adoptopenjdk)

      - name: Set up Maven
        uses: actions/setup-java@v1
        with:
          java-version: '11'
          maven-version: '3.8.6' # Specify the Maven version

      - name: Build with Maven
        run: mvn clean install

      - name: Run tests
        run: mvn test

      - name: SonarQube Scan
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: mvn sonar:sonar

      - name: Build Docker image
        run: docker build -t swapi123/eks:v1.0.0 .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push swapi123/eks:v1.0.0

      - name: Verify Image Push
        run: |
          # Verify if the image with the v1.0.0 tag is pushed successfully
          docker pull swapi123/eks:v1.0.0 || echo "Image with 'v1.0.0' tag not found. Trying to pull all available tags."
          # Pull all available tags to check what versions are available
          docker pull -a swapi123/eks || echo "No tags available for swapi123/eks"
          docker images

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

  scan:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: docker pull swapi123/eks:v1.0.0

      - name: Trivy Scan
        run: trivy image --severity HIGH,CRITICAL swapi123/eks:v1.0.0
