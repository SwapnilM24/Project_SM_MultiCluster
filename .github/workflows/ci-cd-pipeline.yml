name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: '11'

      # Commented out Maven steps since there's no pom.xml
      # - name: Build with Maven
      #   run: mvn clean install -f /home/swapnil/Project_SM_MultiCluster/actions-runner/_work/Project_SM_MultiCluster/Project_SM_MultiCluster/pom.xml

      # - name: Run tests
      #   run: mvn test -f /home/swapnil/Project_SM_MultiCluster/actions-runner/_work/Project_SM_MultiCluster/Project_SM_MultiCluster/pom.xml

      # - name: SonarQube Scan
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      #   run: mvn sonar:sonar -f /home/swapnil/Project_SM_MultiCluster/actions-runner/_work/Project_SM_MultiCluster/Project_SM_MultiCluster/pom.xml

      - name: Build Docker image
        run: docker build -t swapi123/eks:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker image
        run: docker push swapi123/eks:latest

      - name: Verify Image Push
        run: |
          docker pull swapi123/eks:latest || echo "Image with 'latest' tag not found. Trying to pull all available tags."
          docker pull -a swapi123/eks || echo "No tags available for swapi123/eks"
          docker images

      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          version: 'latest'

      - name: Deploy to Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml

  scan:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker image
        run: docker pull swapi123/eks:latest

      - name: Trivy Scan
        run: trivy image --severity HIGH,CRITICAL swapi123/eks:latest
